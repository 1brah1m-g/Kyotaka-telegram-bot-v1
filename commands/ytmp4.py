import urllib.parse, aiohttp
from telegram import Update
from telegram.ext import ContextTypes

API_KEY = "14960d2b4c71e3b190761233"          # ‚Üê ta cl√© lolhuman
API_URL = "https://api.lolhuman.xyz/api/ytvideo"

# Qualit√©s pr√©f√©r√©es dans l‚Äôordre (haute ‚Üí basse)
PREFERRED_QUALITIES = ["720p", "480p", "360p", "240p"]

async def ytmp4(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """T√©l√©charge une vid√©o YouTube avec /ytmp4 <lien> (PV, groupe, canal)."""

    if not context.args:
        await update.message.reply_text("Utilisation : /ytmp4 <lien YouTube>")
        return

    yt_link = context.args[0]
    await update.effective_message.reply_text("‚è≥ R√©cup√©ration des liens‚Ä¶")

    params = {"apikey": API_KEY, "url": yt_link}
    url = f"{API_URL}?{urllib.parse.urlencode(params)}"

    try:
        async with aiohttp.ClientSession(timeout=aiohttp.ClientTimeout(total=15)) as s:
            async with s.get(url) as resp:
                if resp.status != 200:
                    await update.message.reply_text(f"‚ùå Erreur API : {resp.status}")
                    return
                data = await resp.json()
    except Exception as e:
        await update.message.reply_text(f"‚ùå Erreur r√©seau : {e}")
        return

    result = data.get("result", {})
    title = result.get("title", "Vid√©o")
    links = result.get("link", {})             # dict des qualit√©s dispo

    # Choisir la meilleure qualit√© disponible
    video_url = None
    for q in PREFERRED_QUALITIES:
        if q in links:
            video_url = links[q]
            break
    # Fallback : premier lien mp4 trouv√©
    if not video_url and isinstance(links, dict):
        video_url = next(iter(links.values()), None)

    if not video_url:
        await update.message.reply_text("‚ùå Aucun lien MP4 trouv√©.")
        return

    await update.effective_message.reply_text("üì§ Envoi de la vid√©o‚Ä¶")

    try:
        await context.bot.send_video(
            chat_id=update.effective_chat.id,
            video=video_url,
            caption=f"üé¨ {title}"
        )
    except Exception as e:
        await update.message.reply_text(f"‚ùå Erreur lors de l‚Äôenvoi : {e}")